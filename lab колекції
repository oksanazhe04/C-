using System;
using System.Collections.Generic;

public class Task
{
    public int TaskId { get; set; }
    public string Description { get; set; }

    public Task(int taskId, string description)
    {
        TaskId = taskId;
        Description = description;
    }
}

public class TaskManager
{
    private List<Task> tasks;

    public TaskManager()
    {
        tasks = new List<Task>();
    }

    public void AddTask(Task task)
    {
        tasks.Add(task);
        Console.WriteLine("Task " + task.TaskId + " added: " + task.Description);
    }

    public void RemoveTask(int taskId)
    {
        Task taskToRemove = tasks.Find(t => t.TaskId == taskId);

        if (taskToRemove != null)
        {
            tasks.Remove(taskToRemove);
            Console.WriteLine("Task " + taskId + " removed");
        }
        else
        {
            Console.WriteLine("Task with ID " + taskId + " not found");
        }
    }
    public void DisplayTasks()
    {
        Console.WriteLine("Task List:");
        foreach (var task in tasks)
        {
            Console.WriteLine("Task " + task.TaskId + ": " + task.Description);
        }
        Console.WriteLine();
    }
}

class Program
{
    static void Main()
    {
        TaskManager taskManager = new TaskManager();

        taskManager.AddTask(new Task(1, "Homework 1"));
        taskManager.AddTask(new Task(2, "House work"));
        taskManager.AddTask(new Task(3, "Exam tasks"));

        taskManager.DisplayTasks();

        taskManager.RemoveTask(2);

        taskManager.DisplayTasks();

        Console.ReadLine(); 
    }
}




//2
public class User
{
    public int Id { get; set; }
    public string Name { get; set; }

    public User(int id, string name)
    {
        Id = id;
        Name = name;
    }
}

public class UserManager
{
    private List<User> users;

    public UserManager()
    {
        users = new List<User>();
    }

    public void AddUser(User user)
    {
        users.Add(user);
        Console.WriteLine("User added: ID = " + user.Id + ", Name = " + user.Name);
    }

    public void RemoveUser(int userId)
    {
        User userToRemove = users.Find(u => u.Id == userId);

        if (userToRemove != null)
        {
            users.Remove(userToRemove);
            Console.WriteLine("User removed: ID = " + userId + ", Name = " + userToRemove.Name);
        }
        else
        {
            Console.WriteLine("User with ID " + userId + " not found");
        }
    }

    public User FindUserById(int userId)
    {
        return users.Find(u => u.Id == userId);
    }

    public void DisplayUsers()
    {
        Console.WriteLine("User List:");
        foreach (var user in users)
        {
            Console.WriteLine("ID: " + user.Id + ", Name: " + user.Name);
        }
        Console.WriteLine();
    }
}

class Program
{
    static void Main()
    { 
        UserManager userManager = new UserManager();

        userManager.AddUser(new User(1, "Oksana Zhetariuk"));
        userManager.AddUser(new User(2, "Daryna Zhetariuk"));

        userManager.DisplayUsers();

        int searchUserId = 1;
        User foundUser = userManager.FindUserById(searchUserId);
        if (foundUser != null)
        {
            Console.WriteLine("Found User: ID = " + foundUser.Id + ", Name = " + foundUser.Name);
        }
        else
        {
            Console.WriteLine("User with ID " + searchUserId + " not found");
        }

        int userIdToRemove = 2;
        userManager.RemoveUser(userIdToRemove);

        userManager.DisplayUsers();

        Console.ReadLine();
    }
}

